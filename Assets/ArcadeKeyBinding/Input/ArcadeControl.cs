//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/ArcadeKeyBinding/Input/ArcadeControl.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ArcadeControl: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ArcadeControl()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ArcadeControl"",
    ""maps"": [
        {
            ""name"": ""PC"",
            ""id"": ""f2f94a7d-3da5-4bb9-a2d1-8c366958b6c7"",
            ""actions"": [
                {
                    ""name"": ""Home"",
                    ""type"": ""Button"",
                    ""id"": ""4bfe9ada-d4bc-423e-bea4-65c8d8ba5daf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""J"",
                    ""type"": ""Button"",
                    ""id"": ""735b7995-b7f5-4c67-b920-7ea587507e7d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""K"",
                    ""type"": ""Button"",
                    ""id"": ""55ce10fa-c7da-4d15-86f0-85c88f4a5818"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""L"",
                    ""type"": ""Button"",
                    ""id"": ""9d0c5a63-4910-463e-a799-06819024b590"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JoystickX"",
                    ""type"": ""Value"",
                    ""id"": ""0fe43344-c370-4715-9682-3926e79e56a9"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""JoystickY"",
                    ""type"": ""Value"",
                    ""id"": ""d67caaf7-a28c-4144-ac2c-e74afe95c24b"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Trackball"",
                    ""type"": ""Value"",
                    ""id"": ""832c62cd-3332-44b2-9b88-8be9ff862706"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0547f41f-2dbf-4589-a7cc-5e22e180f726"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Home"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""744dc3ef-a2ab-41cb-89dd-bb329e602d75"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Home"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c85078c5-182a-4aaa-a3df-48bf1cf68d58"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""J"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""316887f8-03be-40f0-a138-b6eca148e832"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""IMGDArcade"",
                    ""action"": ""J"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""64f26460-6723-448c-af5d-731bcdf8bd20"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""K"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fbb77706-4440-452c-acd9-bc60cddc3f79"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""IMGDArcade"",
                    ""action"": ""K"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc8e5e20-054c-43c4-aa03-965f69093783"",
                    ""path"": ""<Gamepad>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""IMGDArcade"",
                    ""action"": ""JoystickX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""035d7290-05e9-4ad4-a331-b0ebc9939e96"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JoystickX"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""e76f1111-6506-46d0-abae-ade359c7e00d"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""JoystickX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""b1a4c2e7-5c6b-4d11-af6a-b5f46fb44a60"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""JoystickX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e4220c73-8688-4dee-af0a-258e60208da7"",
                    ""path"": ""<Gamepad>/leftStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""IMGDArcade"",
                    ""action"": ""JoystickY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""276df5b0-b8af-4bab-a6ac-8a451c3951e0"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JoystickY"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""8dadf603-7bfa-44c1-810d-a19343b5d9d3"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""JoystickY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""00dbdca3-4bdf-4cd0-9de8-a7250cfc1055"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""JoystickY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4ae1455e-2606-4970-b39c-5176f24f8e94"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""L"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce2115bc-8e4d-4dce-99d9-5ff7b9afca23"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""IMGDArcade"",
                    ""action"": ""L"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9d31aa10-c570-4777-af14-0b39dc275ff1"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""IMGDArcade;Keyboard"",
                    ""action"": ""Trackball"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec337ae4-c184-4f9d-8e67-f0321cfaca6a"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Trackball"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Arcade"",
            ""id"": ""2834dcca-ddff-4079-bdeb-1e792cb6ce0f"",
            ""actions"": [
                {
                    ""name"": ""Home"",
                    ""type"": ""Button"",
                    ""id"": ""5fe9ec4d-8aa7-4f4b-9c72-b47083afe544"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""J"",
                    ""type"": ""Button"",
                    ""id"": ""f8f88612-f2d4-4a49-9a27-be6d9fc739fe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""K"",
                    ""type"": ""Button"",
                    ""id"": ""e6e709c6-8382-4c11-a83c-4b8a99333fe9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""L"",
                    ""type"": ""Button"",
                    ""id"": ""a984bce7-9820-4ccf-bf91-c440730a606f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JoystickX"",
                    ""type"": ""Value"",
                    ""id"": ""dae5bbbb-4df9-47bd-a55a-52f3b46281df"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""JoystickY"",
                    ""type"": ""Value"",
                    ""id"": ""efa1fdd1-3149-4813-adde-89cc08ff9ae2"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Trackball"",
                    ""type"": ""Value"",
                    ""id"": ""6f6bf5e8-81eb-4e53-9bc1-0f9918c54e64"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9c000265-b337-4a99-918e-2ad0112e28cc"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""IMGDArcade"",
                    ""action"": ""Home"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be9bb6b0-991a-4ee1-a68f-05497e7be7d0"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""IMGDArcade"",
                    ""action"": ""J"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""448a202d-23b3-48aa-97bc-0a2a3545bfe3"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""IMGDArcade"",
                    ""action"": ""K"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""685cc53e-8cf3-418a-a080-2f8295dac4e6"",
                    ""path"": ""<Gamepad>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""IMGDArcade"",
                    ""action"": ""JoystickX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27ace11b-dd8f-4669-a7a4-ba331eef3b33"",
                    ""path"": ""<Gamepad>/leftStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""IMGDArcade"",
                    ""action"": ""JoystickY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ab56fe8e-8bd1-4807-b389-438fe311b9d6"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""IMGDArcade"",
                    ""action"": ""L"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d1bd20b7-7593-4f7a-af6d-9c4e837546f0"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""IMGDArcade"",
                    ""action"": ""Trackball"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""IMGDArcade"",
            ""bindingGroup"": ""IMGDArcade"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // PC
        m_PC = asset.FindActionMap("PC", throwIfNotFound: true);
        m_PC_Home = m_PC.FindAction("Home", throwIfNotFound: true);
        m_PC_J = m_PC.FindAction("J", throwIfNotFound: true);
        m_PC_K = m_PC.FindAction("K", throwIfNotFound: true);
        m_PC_L = m_PC.FindAction("L", throwIfNotFound: true);
        m_PC_JoystickX = m_PC.FindAction("JoystickX", throwIfNotFound: true);
        m_PC_JoystickY = m_PC.FindAction("JoystickY", throwIfNotFound: true);
        m_PC_Trackball = m_PC.FindAction("Trackball", throwIfNotFound: true);
        // Arcade
        m_Arcade = asset.FindActionMap("Arcade", throwIfNotFound: true);
        m_Arcade_Home = m_Arcade.FindAction("Home", throwIfNotFound: true);
        m_Arcade_J = m_Arcade.FindAction("J", throwIfNotFound: true);
        m_Arcade_K = m_Arcade.FindAction("K", throwIfNotFound: true);
        m_Arcade_L = m_Arcade.FindAction("L", throwIfNotFound: true);
        m_Arcade_JoystickX = m_Arcade.FindAction("JoystickX", throwIfNotFound: true);
        m_Arcade_JoystickY = m_Arcade.FindAction("JoystickY", throwIfNotFound: true);
        m_Arcade_Trackball = m_Arcade.FindAction("Trackball", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PC
    private readonly InputActionMap m_PC;
    private List<IPCActions> m_PCActionsCallbackInterfaces = new List<IPCActions>();
    private readonly InputAction m_PC_Home;
    private readonly InputAction m_PC_J;
    private readonly InputAction m_PC_K;
    private readonly InputAction m_PC_L;
    private readonly InputAction m_PC_JoystickX;
    private readonly InputAction m_PC_JoystickY;
    private readonly InputAction m_PC_Trackball;
    public struct PCActions
    {
        private @ArcadeControl m_Wrapper;
        public PCActions(@ArcadeControl wrapper) { m_Wrapper = wrapper; }
        public InputAction @Home => m_Wrapper.m_PC_Home;
        public InputAction @J => m_Wrapper.m_PC_J;
        public InputAction @K => m_Wrapper.m_PC_K;
        public InputAction @L => m_Wrapper.m_PC_L;
        public InputAction @JoystickX => m_Wrapper.m_PC_JoystickX;
        public InputAction @JoystickY => m_Wrapper.m_PC_JoystickY;
        public InputAction @Trackball => m_Wrapper.m_PC_Trackball;
        public InputActionMap Get() { return m_Wrapper.m_PC; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PCActions set) { return set.Get(); }
        public void AddCallbacks(IPCActions instance)
        {
            if (instance == null || m_Wrapper.m_PCActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PCActionsCallbackInterfaces.Add(instance);
            @Home.started += instance.OnHome;
            @Home.performed += instance.OnHome;
            @Home.canceled += instance.OnHome;
            @J.started += instance.OnJ;
            @J.performed += instance.OnJ;
            @J.canceled += instance.OnJ;
            @K.started += instance.OnK;
            @K.performed += instance.OnK;
            @K.canceled += instance.OnK;
            @L.started += instance.OnL;
            @L.performed += instance.OnL;
            @L.canceled += instance.OnL;
            @JoystickX.started += instance.OnJoystickX;
            @JoystickX.performed += instance.OnJoystickX;
            @JoystickX.canceled += instance.OnJoystickX;
            @JoystickY.started += instance.OnJoystickY;
            @JoystickY.performed += instance.OnJoystickY;
            @JoystickY.canceled += instance.OnJoystickY;
            @Trackball.started += instance.OnTrackball;
            @Trackball.performed += instance.OnTrackball;
            @Trackball.canceled += instance.OnTrackball;
        }

        private void UnregisterCallbacks(IPCActions instance)
        {
            @Home.started -= instance.OnHome;
            @Home.performed -= instance.OnHome;
            @Home.canceled -= instance.OnHome;
            @J.started -= instance.OnJ;
            @J.performed -= instance.OnJ;
            @J.canceled -= instance.OnJ;
            @K.started -= instance.OnK;
            @K.performed -= instance.OnK;
            @K.canceled -= instance.OnK;
            @L.started -= instance.OnL;
            @L.performed -= instance.OnL;
            @L.canceled -= instance.OnL;
            @JoystickX.started -= instance.OnJoystickX;
            @JoystickX.performed -= instance.OnJoystickX;
            @JoystickX.canceled -= instance.OnJoystickX;
            @JoystickY.started -= instance.OnJoystickY;
            @JoystickY.performed -= instance.OnJoystickY;
            @JoystickY.canceled -= instance.OnJoystickY;
            @Trackball.started -= instance.OnTrackball;
            @Trackball.performed -= instance.OnTrackball;
            @Trackball.canceled -= instance.OnTrackball;
        }

        public void RemoveCallbacks(IPCActions instance)
        {
            if (m_Wrapper.m_PCActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPCActions instance)
        {
            foreach (var item in m_Wrapper.m_PCActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PCActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PCActions @PC => new PCActions(this);

    // Arcade
    private readonly InputActionMap m_Arcade;
    private List<IArcadeActions> m_ArcadeActionsCallbackInterfaces = new List<IArcadeActions>();
    private readonly InputAction m_Arcade_Home;
    private readonly InputAction m_Arcade_J;
    private readonly InputAction m_Arcade_K;
    private readonly InputAction m_Arcade_L;
    private readonly InputAction m_Arcade_JoystickX;
    private readonly InputAction m_Arcade_JoystickY;
    private readonly InputAction m_Arcade_Trackball;
    public struct ArcadeActions
    {
        private @ArcadeControl m_Wrapper;
        public ArcadeActions(@ArcadeControl wrapper) { m_Wrapper = wrapper; }
        public InputAction @Home => m_Wrapper.m_Arcade_Home;
        public InputAction @J => m_Wrapper.m_Arcade_J;
        public InputAction @K => m_Wrapper.m_Arcade_K;
        public InputAction @L => m_Wrapper.m_Arcade_L;
        public InputAction @JoystickX => m_Wrapper.m_Arcade_JoystickX;
        public InputAction @JoystickY => m_Wrapper.m_Arcade_JoystickY;
        public InputAction @Trackball => m_Wrapper.m_Arcade_Trackball;
        public InputActionMap Get() { return m_Wrapper.m_Arcade; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ArcadeActions set) { return set.Get(); }
        public void AddCallbacks(IArcadeActions instance)
        {
            if (instance == null || m_Wrapper.m_ArcadeActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ArcadeActionsCallbackInterfaces.Add(instance);
            @Home.started += instance.OnHome;
            @Home.performed += instance.OnHome;
            @Home.canceled += instance.OnHome;
            @J.started += instance.OnJ;
            @J.performed += instance.OnJ;
            @J.canceled += instance.OnJ;
            @K.started += instance.OnK;
            @K.performed += instance.OnK;
            @K.canceled += instance.OnK;
            @L.started += instance.OnL;
            @L.performed += instance.OnL;
            @L.canceled += instance.OnL;
            @JoystickX.started += instance.OnJoystickX;
            @JoystickX.performed += instance.OnJoystickX;
            @JoystickX.canceled += instance.OnJoystickX;
            @JoystickY.started += instance.OnJoystickY;
            @JoystickY.performed += instance.OnJoystickY;
            @JoystickY.canceled += instance.OnJoystickY;
            @Trackball.started += instance.OnTrackball;
            @Trackball.performed += instance.OnTrackball;
            @Trackball.canceled += instance.OnTrackball;
        }

        private void UnregisterCallbacks(IArcadeActions instance)
        {
            @Home.started -= instance.OnHome;
            @Home.performed -= instance.OnHome;
            @Home.canceled -= instance.OnHome;
            @J.started -= instance.OnJ;
            @J.performed -= instance.OnJ;
            @J.canceled -= instance.OnJ;
            @K.started -= instance.OnK;
            @K.performed -= instance.OnK;
            @K.canceled -= instance.OnK;
            @L.started -= instance.OnL;
            @L.performed -= instance.OnL;
            @L.canceled -= instance.OnL;
            @JoystickX.started -= instance.OnJoystickX;
            @JoystickX.performed -= instance.OnJoystickX;
            @JoystickX.canceled -= instance.OnJoystickX;
            @JoystickY.started -= instance.OnJoystickY;
            @JoystickY.performed -= instance.OnJoystickY;
            @JoystickY.canceled -= instance.OnJoystickY;
            @Trackball.started -= instance.OnTrackball;
            @Trackball.performed -= instance.OnTrackball;
            @Trackball.canceled -= instance.OnTrackball;
        }

        public void RemoveCallbacks(IArcadeActions instance)
        {
            if (m_Wrapper.m_ArcadeActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IArcadeActions instance)
        {
            foreach (var item in m_Wrapper.m_ArcadeActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ArcadeActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ArcadeActions @Arcade => new ArcadeActions(this);
    private int m_IMGDArcadeSchemeIndex = -1;
    public InputControlScheme IMGDArcadeScheme
    {
        get
        {
            if (m_IMGDArcadeSchemeIndex == -1) m_IMGDArcadeSchemeIndex = asset.FindControlSchemeIndex("IMGDArcade");
            return asset.controlSchemes[m_IMGDArcadeSchemeIndex];
        }
    }
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IPCActions
    {
        void OnHome(InputAction.CallbackContext context);
        void OnJ(InputAction.CallbackContext context);
        void OnK(InputAction.CallbackContext context);
        void OnL(InputAction.CallbackContext context);
        void OnJoystickX(InputAction.CallbackContext context);
        void OnJoystickY(InputAction.CallbackContext context);
        void OnTrackball(InputAction.CallbackContext context);
    }
    public interface IArcadeActions
    {
        void OnHome(InputAction.CallbackContext context);
        void OnJ(InputAction.CallbackContext context);
        void OnK(InputAction.CallbackContext context);
        void OnL(InputAction.CallbackContext context);
        void OnJoystickX(InputAction.CallbackContext context);
        void OnJoystickY(InputAction.CallbackContext context);
        void OnTrackball(InputAction.CallbackContext context);
    }
}
